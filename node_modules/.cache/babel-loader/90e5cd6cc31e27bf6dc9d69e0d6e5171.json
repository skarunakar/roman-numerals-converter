{"ast":null,"code":"var _jsxFileName = \"/Users/skarunakar/dev/roman-numerals-converter/src/molecules/romanNumeralsToInteger/RomanNumeralsToInteger.js\";\nimport React, { Component } from 'react';\nimport ConverterCard from '../../atoms/converterCard';\nimport style from './romanNumeralsToInteger.module.scss'; //utils\n\nimport fromRoman from '../../utils/fromRoman';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RomanNumeralsToInteger extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formattedInteger: '',\n      errorMessage: ''\n    };\n\n    this.handleChange = romanNumeral => {\n      const integer = parseInt(inputValue);\n\n      if (integer === 0 || integer >= 9999) {\n        return this.setState({\n          errorMessage: 'Enter Number between 0 and 999',\n          formattedRomanNumeral: ''\n        });\n      }\n\n      const formattedRomanNumeral = toRoman(integer);\n      this.setState({\n        formattedInteger,\n        errorMessage: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      formattedInteger,\n      errorMessage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(ConverterCard, {\n      title: 'Roman Numerals to Integer',\n      value: formattedInteger,\n      className: style.cardContainer,\n      error: errorMessage,\n      onChange: this.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RomanNumeralsToInteger;","map":{"version":3,"sources":["/Users/skarunakar/dev/roman-numerals-converter/src/molecules/romanNumeralsToInteger/RomanNumeralsToInteger.js"],"names":["React","Component","ConverterCard","style","fromRoman","RomanNumeralsToInteger","state","formattedInteger","errorMessage","handleChange","romanNumeral","integer","parseInt","inputValue","setState","formattedRomanNumeral","toRoman","render","cardContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,OAAOC,KAAP,MAAkB,sCAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,sBAAN,SAAqCJ,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC3CK,KAD2C,GACnC;AACJC,MAAAA,gBAAgB,EAAE,EADd;AAEJC,MAAAA,YAAY,EAAE;AAFV,KADmC;;AAAA,SAM3CC,YAN2C,GAM3BC,YAAD,IAAkB;AAC7B,YAAMC,OAAO,GAAGC,QAAQ,CAACC,UAAD,CAAxB;;AACA,UAAIF,OAAO,KAAK,CAAZ,IAAiBA,OAAO,IAAI,IAAhC,EAAsC;AAClC,eAAO,KAAKG,QAAL,CAAc;AAAEN,UAAAA,YAAY,EAAE,gCAAhB;AAAkDO,UAAAA,qBAAqB,EAAE;AAAzE,SAAd,CAAP;AACH;;AACD,YAAMA,qBAAqB,GAAGC,OAAO,CAACL,OAAD,CAArC;AACA,WAAKG,QAAL,CAAc;AAAEP,QAAAA,gBAAF;AAAoBC,QAAAA,YAAY,EAAE;AAAlC,OAAd;AACH,KAb0C;AAAA;;AAe3CS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA,gBAAF;AAAoBC,MAAAA;AAApB,QAAqC,KAAKF,KAAhD;AACA,wBACI,QAAE,aAAF;AACI,MAAA,KAAK,EAAE,2BADX;AAEI,MAAA,KAAK,EAAEC,gBAFX;AAGI,MAAA,SAAS,EAAEJ,KAAK,CAACe,aAHrB;AAII,MAAA,KAAK,EAAEV,YAJX;AAKI,MAAA,QAAQ,EAAE,KAAKC;AALnB;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA1B0C;;AA6B/C,eAAeJ,sBAAf","sourcesContent":["import React, { Component } from 'react';\nimport ConverterCard from '../../atoms/converterCard';\n\nimport style from './romanNumeralsToInteger.module.scss'\n\n//utils\nimport fromRoman from '../../utils/fromRoman';\n\nclass RomanNumeralsToInteger extends Component {\n    state = {\n        formattedInteger: '',\n        errorMessage: ''\n    };\n\n    handleChange = (romanNumeral) => {\n        const integer = parseInt(inputValue);\n        if (integer === 0 || integer >= 9999) {\n            return this.setState({ errorMessage: 'Enter Number between 0 and 999', formattedRomanNumeral: '' })\n        }\n        const formattedRomanNumeral = toRoman(integer);\n        this.setState({ formattedInteger, errorMessage: '' });\n    }\n\n    render() {\n        const { formattedInteger, errorMessage } = this.state;\n        return (\n            < ConverterCard\n                title={'Roman Numerals to Integer'}\n                value={formattedInteger}\n                className={style.cardContainer}\n                error={errorMessage}\n                onChange={this.handleChange}\n            />\n        );\n    }\n}\n\nexport default RomanNumeralsToInteger;"]},"metadata":{},"sourceType":"module"}