{"ast":null,"code":"var _jsxFileName = \"/Users/skarunakar/dev/roman-numerals-converter/src/atoms/converterCard/ConverterCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './converterCard.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConverterCard = (props = {}) => {\n  _s();\n\n  const {\n    onChange\n  } = props;\n  const handleInputChange = useCallback((event = {}) => {\n    const inputValue = event.target.value;\n    onChange(inputValue);\n  }, [onChange]);\n  const {\n    className,\n    title,\n    value,\n    error\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${style.cardContainer} ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.displaytext,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConverterCard, \"P0U2HpB8jyysCZZEh/2E/wxKpnw=\");\n\n_c = ConverterCard;\nConverterCard.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  error: PropTypes.string\n};\nConverterCard.defaultProps = {\n  className: '',\n  title: '',\n  onChange: () => {},\n  value: '',\n  error: ''\n};\nexport default ConverterCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConverterCard\");","map":{"version":3,"sources":["/Users/skarunakar/dev/roman-numerals-converter/src/atoms/converterCard/ConverterCard.js"],"names":["React","useCallback","PropTypes","style","ConverterCard","props","onChange","handleInputChange","event","inputValue","target","value","className","title","error","cardContainer","displaytext","propTypes","string","func","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG,EAAT,KAAgB;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AAEA,QAAME,iBAAiB,GAAGN,WAAW,CAAC,CAACO,KAAK,GAAG,EAAT,KAAgB;AAClD,UAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAhC;AACAL,IAAAA,QAAQ,CAACG,UAAD,CAAR;AACH,GAHoC,EAGlC,CAACH,QAAD,CAHkC,CAArC;AAKA,QAAM;AACFM,IAAAA,SADE;AAEFC,IAAAA,KAFE;AAGFF,IAAAA,KAHE;AAIFG,IAAAA;AAJE,MAKFT,KALJ;AAMA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEF,KAAK,CAACY,aAAc,IAAGH,SAAU,EAApD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAET,KAAK,CAACU,KAAtB;AAAA,gBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,QAAQ,EAAEN;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAEJ,KAAK,CAACa,WAAtB;AAAA,gBAAoCL;AAApC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CArBD;;GAAMP,a;;KAAAA,a;AAuBNA,aAAa,CAACa,SAAd,GAA0B;AACtBL,EAAAA,SAAS,EAAEV,SAAS,CAACgB,MADC;AAEtBL,EAAAA,KAAK,EAAEX,SAAS,CAACgB,MAFK;AAGtBZ,EAAAA,QAAQ,EAAEJ,SAAS,CAACiB,IAHE;AAItBR,EAAAA,KAAK,EAAET,SAAS,CAACgB,MAJK;AAKtBJ,EAAAA,KAAK,EAAEZ,SAAS,CAACgB;AALK,CAA1B;AAQAd,aAAa,CAACgB,YAAd,GAA6B;AACzBR,EAAAA,SAAS,EAAE,EADc;AAEzBC,EAAAA,KAAK,EAAE,EAFkB;AAGzBP,EAAAA,QAAQ,EAAE,MAAM,CAAG,CAHM;AAIzBK,EAAAA,KAAK,EAAE,EAJkB;AAKzBG,EAAAA,KAAK,EAAE;AALkB,CAA7B;AAOA,eAAeV,aAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './converterCard.module.scss';\n\nconst ConverterCard = (props = {}) => {\n    const { onChange } = props;\n\n    const handleInputChange = useCallback((event = {}) => {\n        const inputValue = event.target.value;\n        onChange(inputValue);\n    }, [onChange])\n\n    const {\n        className,\n        title,\n        value,\n        error,\n    } = props;\n    return (\n        <div className={`${style.cardContainer} ${className}`}>\n            <div className={style.title}>{title}</div>\n            <input onChange={handleInputChange}></input>\n            <div className={style.displaytext}>{value}</div>\n        </div>\n    )\n}\n\nConverterCard.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    error: PropTypes.string,\n};\n\nConverterCard.defaultProps = {\n    className: '',\n    title: '',\n    onChange: () => { },\n    value: '',\n    error: ''\n};\nexport default ConverterCard;"]},"metadata":{},"sourceType":"module"}