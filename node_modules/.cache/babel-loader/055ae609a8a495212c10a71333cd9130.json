{"ast":null,"code":"import { isValidRomanNumeral } from '../app.helpers';\nconst ROMAN_INTEGER_MAP = {\n  'I': 1,\n  'V': 5,\n  'X': 10,\n  'L': 50,\n  'C': 100,\n  'D': 500,\n  'M': 1000\n};\n\nfunction fromRoman(inputToConvert = '') {\n  const romanNumeral = inputToConvert.toUpperCase();\n\n  if (!isValidRomanNumeral(romanNumeral)) {\n    return undefined;\n  }\n\n  const romanNumeralSize = romanNumeral.length;\n  let computedInteger = ROMAN_INTEGER_MAP[romanNumeral.charAt(0)];\n  let prevComputed = computedInteger;\n\n  for (let i = 1; i < romanNumeralSize; i++) {\n    const integerEqv = ROMAN_INTEGER_MAP[romanNumeral.charAt(i)];\n\n    if (prevComputed < integerEqv) {\n      computedInteger = computedInteger - prevComputed - prevComputed;\n    }\n\n    computedInteger = computedInteger + integerEqv;\n    prevComputed = integerEqv;\n    i++;\n  }\n\n  return computedInteger;\n}\n\nexport default fromRoman;","map":{"version":3,"sources":["/Users/skarunakar/dev/roman-numerals-converter/src/utils/fromRoman.js"],"names":["isValidRomanNumeral","ROMAN_INTEGER_MAP","fromRoman","inputToConvert","romanNumeral","toUpperCase","undefined","romanNumeralSize","length","computedInteger","charAt","prevComputed","i","integerEqv"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,gBAApC;AACA,MAAMC,iBAAiB,GAAG;AACtB,OAAK,CADiB;AAEtB,OAAK,CAFiB;AAGtB,OAAK,EAHiB;AAItB,OAAK,EAJiB;AAKtB,OAAK,GALiB;AAMtB,OAAK,GANiB;AAOtB,OAAK;AAPiB,CAA1B;;AAUA,SAASC,SAAT,CAAmBC,cAAc,GAAG,EAApC,EAAwC;AACpC,QAAMC,YAAY,GAAGD,cAAc,CAACE,WAAf,EAArB;;AACA,MAAI,CAACL,mBAAmB,CAACI,YAAD,CAAxB,EAAwC;AACpC,WAAOE,SAAP;AACH;;AACD,QAAMC,gBAAgB,GAAGH,YAAY,CAACI,MAAtC;AACA,MAAIC,eAAe,GAAGR,iBAAiB,CAACG,YAAY,CAACM,MAAb,CAAoB,CAApB,CAAD,CAAvC;AACA,MAAIC,YAAY,GAAGF,eAAnB;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,gBAApB,EAAsCK,CAAC,EAAvC,EAA2C;AACvC,UAAMC,UAAU,GAAGZ,iBAAiB,CAACG,YAAY,CAACM,MAAb,CAAoBE,CAApB,CAAD,CAApC;;AACA,QAAID,YAAY,GAAGE,UAAnB,EAA+B;AAC3BJ,MAAAA,eAAe,GAAGA,eAAe,GAAGE,YAAlB,GAAiCA,YAAnD;AACH;;AACDF,IAAAA,eAAe,GAAGA,eAAe,GAAGI,UAApC;AACAF,IAAAA,YAAY,GAAGE,UAAf;AACAD,IAAAA,CAAC;AACJ;;AACD,SAAOH,eAAP;AACH;;AAED,eAAeP,SAAf","sourcesContent":["import { isValidRomanNumeral } from '../app.helpers';\nconst ROMAN_INTEGER_MAP = {\n    'I': 1,\n    'V': 5,\n    'X': 10,\n    'L': 50,\n    'C': 100,\n    'D': 500,\n    'M': 1000,\n};\n\nfunction fromRoman(inputToConvert = '') {\n    const romanNumeral = inputToConvert.toUpperCase();\n    if (!isValidRomanNumeral(romanNumeral)) {\n        return undefined;\n    }\n    const romanNumeralSize = romanNumeral.length;\n    let computedInteger = ROMAN_INTEGER_MAP[romanNumeral.charAt(0)];\n    let prevComputed = computedInteger;\n    for (let i = 1; i < romanNumeralSize; i++) {\n        const integerEqv = ROMAN_INTEGER_MAP[romanNumeral.charAt(i)];\n        if (prevComputed < integerEqv) {\n            computedInteger = computedInteger - prevComputed - prevComputed;\n        }\n        computedInteger = computedInteger + integerEqv;\n        prevComputed = integerEqv;\n        i++;\n    }\n    return computedInteger;\n}\n\nexport default fromRoman;"]},"metadata":{},"sourceType":"module"}